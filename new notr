

// [5:03 am, 02/06/2023] Anmad Clh: using System.ComponentModel.DataAnnotations;

// namespace fastliveryX.Dto
// {
//     public class EmailRequestModel
//     {
//         public string ReceiverName { get; set; }
//         public string ReceiverEmail { get; set; }
//         public string EmailSubject { get; set; }
//         public string EmailBody { get; set; }
//     }
// 
////
//     public class EmailResponse
//     {
//         [Required]
//         public string Message { get; set; }
//         [Required]
//         public bool Status { get; set; }
//     }
// }

// namespace fastliveryX.Services.Interfaces
// {
//     public interface IEmailService
//     {
//         EmailResponse SendEmail(EmailRequestModel model);
//     }
// }
// [5:03 am, 02/06/2023] Anmad Clh: using fastliveryX.Dto;
// using fastliveryX.Services.Interfaces;
// using Newtonsoft.Json.Linq;
// using sib_api_v3_sdk.Api;
// using sib_api_v3_sdk.Client;
// using sib_api_v3_sdk.Model;

// namespace fastliveryX.Services.Implementations
// {
//     public class EmailService : IEmailService
//     {
//         public EmailResponse SendEmail(EmailRequestModel model)
//         {
//             Configuration.Default.ApiKey.Clear();
//             Configuration.Default.ApiKey.Add("api-key", "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");

//             var apiInstance = new TransactionalEmailsApi();

//             string SenderName = "mySchool";
//             string SenderEmail = "codedupdates8@gmail.com";
//             SendSmtpEmailSender Email = new SendSmtpEmailSender(SenderName, SenderEmail);

//             string ToEmail = model.ReceiverEmail;
//             string ToName = model.ReceiverName;
//             SendSmtpEmailTo smtpEmailTo = new SendSmtpEmailTo(ToEmail, ToName);
//             List<SendSmtpEmailTo> To = new List<SendSmtpEmailTo>();
//             To.Add(smtpEmailTo);

//             string BccName = "Janice Doe";
//             string BccEmail = "example2@example2.com";
//             SendSmtpEmailBcc BccData = new SendSmtpEmailBcc(BccEmail, BccName);
//             List<SendSmtpEmailBcc> Bcc = new List<SendSmtpEmailBcc>();
//             Bcc.Add(BccData);

//             string CcName = "John Doe";
//             string CcEmail = "example3@example2.com";
//             SendSmtpEmailCc CcData = new SendSmtpEmailCc(CcEmail, CcName);
//             List<SendSmtpEmailCc> Cc = new List<SendSmtpEmailCc>();
//             Cc.Add(CcData);

//             string HtmlContent = model.EmailBody;
//             string TextContent = null;

//             string Subject = model.EmailSubject;
//             string ReplyToName = "John Doe";
//             string ReplyToEmail = "replyto@domain.com";
//             SendSmtpEmailReplyTo ReplyTo = new SendSmtpEmailReplyTo(ReplyToEmail, ReplyToName);

//             string AttachmentUrl = null;
//             string stringInBase64 = "aGVsbG8gdGhpcyBpcyB0ZXN0";
//             byte[] Content = System.Convert.FromBase64String(stringInBase64);
//             string AttachmentName = "test.txt";
//             SendSmtpEmailAttachment AttachmentContent = new SendSmtpEmailAttachment(AttachmentUrl, Content, AttachmentName);
//             List<SendSmtpEmailAttachment> Attachment = new List<SendSmtpEmailAttachment>();
//             Attachment.Add(AttachmentContent);

//             JObject Headers = new JObject();
//             Headers.Add("Some-Custom-Name", "unique-id-1234");
//             long? TemplateId = null;
//             JObject Params = new JObject();
//             Params.Add("parameter", "My param value");
//             Params.Add("subject", "New Subject");
//             List<string> Tags = new List<string>();
//             Tags.Add("mytag");
//             SendSmtpEmailTo1 smtpEmailTo1 = new SendSmtpEmailTo1(ToEmail, ToName);
//             List<SendSmtpEmailTo1> To1 = new List<SendSmtpEmailTo1>();
//             To1.Add(smtpEmailTo1);
//             Dictionary<string, object> _parmas = new Dictionary<string, object>();
//             _parmas.Add("params", Params);
//             SendSmtpEmailReplyTo1 ReplyTo1 = new SendSmtpEmailReplyTo1(ReplyToEmail, ReplyToName);

//             SendSmtpEmailMessageVersions messageVersion = new SendSmtpEmailMessageVersions(To1, _parmas, Bcc, Cc, ReplyTo1, Subject);

//             List<SendSmtpEmailMessageVersions> messageVersiopns = new List<SendSmtpEmailMessageVersions>();
//             messageVersiopns.Add(messageVersion);
//             try
//             {
//                 var sendSmtpEmail = new SendSmtpEmail(Email, To, Bcc, Cc, HtmlContent, TextContent, Subject, ReplyTo, Attachment, Headers, TemplateId, Params, messageVersiopns, Tags);
//                 CreateSmtpEmail result = apiInstance.SendTransacEmail(sendSmâ€¦
// [5:04 am, 02/06/2023] Anmad Clh: public async Task<BaseResponse<OrderDto>> Delivered(string id)
//         {
//             var order = await _orderRepository.Get(id);
//             if (order == null)
//             {
//                 return new BaseResponse<OrderDto>
//                 {
//                     Message = "Not found",
//                     Status = false
//                 };
//             }

//             order.Status = Entities.Enums.DeliveryStatus.Delivered;

//             var sendDetails = new EmailRequestModel
//             {
//                 EmailBody = $"Dear {order.CustomerName} , this is to inform you that your package from {order.Merchant.User.FirstName} {order.Merchant.User.LastName} has been delivered and confirmed to be delivered by you now at {DateTime.Now} ",
//                 ReceiverEmail = order.CustomerEmail,
//                 ReceiverName = order.CustomerName,
//                 EmailSubject = "You have been invited",
//             };

//             var sendInvite = _emailService.SendEmail(sendDetails);
//             _orderRepository.Save();

//             return new BaseResponse<OrderDto>
//             {
//                 Message = "Success",
//                 Status = true,
//                 Data = new OrderDto
//                 {
//                     Id = order.Id,
//                     CustomerName = order.CustomerName,
//                     DateInitiated = order.DateInitiated,
//                     DeliveryAddress = order.DeliveryAddress.State + "," + order.DeliveryAddress.LocalGovernment + "," + order.DeliveryAddress.FullAddress,
//                     DeliveryDate = order.DeliveryDate,
//                     DeliveryType = order.DeliveryType,
//                     Packages = order.Packages,
//                     PickUpAddress = order.PickUpAddress.State + "," + order.PickUpAddress.LocalGovernment + "," + order.PickUpAddress.FullAddress,
//                     Status = order.Status,
//                     TrackingNo = order.TrackingNo
//                 }
//             };
//         }